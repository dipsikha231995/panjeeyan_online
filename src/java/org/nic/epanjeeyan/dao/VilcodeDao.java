/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package org.nic.epanjeeyan.dao;

import org.nic.epanjeeyan.dto.*;
import org.nic.epanjeeyan.exceptions.*;

public interface VilcodeDao
{
	/** 
	 * Inserts a new row in the vilcode table.
	 */
	public VilcodePk insert(Vilcode dto) throws VilcodeDaoException;

	/** 
	 * Updates a single row in the vilcode table.
	 */
	public void update(VilcodePk pk, Vilcode dto) throws VilcodeDaoException;

	/** 
	 * Deletes a single row in the vilcode table.
	 */
	public void delete(VilcodePk pk) throws VilcodeDaoException;

	/** 
	 * Returns the rows from the vilcode table that matches the specified primary-key value.
	 */
	public Vilcode findByPrimaryKey(VilcodePk pk) throws VilcodeDaoException;

	/** 
	 * Returns all rows from the vilcode table that match the criteria 'vlcode = :vlcode'.
	 */
	public Vilcode findByPrimaryKey(String vlcode) throws VilcodeDaoException;

	/** 
	 * Returns all rows from the vilcode table that match the criteria ''.
	 */
	public Vilcode[] findAll() throws VilcodeDaoException;
public Vilcode[] pageAll(Integer offset,Integer num) throws VilcodeDaoException;
	/** 
	 * Returns all rows from the vilcode table that match the criteria 'vlcode = :vlcode'.
	 */
	public Vilcode[] findWhereVlcodeEquals(String vlcode) throws VilcodeDaoException;

	/** 
	 * Returns all rows from the vilcode table that match the criteria 'vlname = :vlname'.
	 */
	public Vilcode[] findWhereVlnameEquals(String vlname) throws VilcodeDaoException;

	/** 
	 * Returns all rows from the vilcode table that match the criteria 'vltype = :vltype'.
	 */
	public Vilcode[] findWhereVltypeEquals(String vltype) throws VilcodeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the vilcode table that match the specified arbitrary SQL statement
	 */
	public Vilcode[] findByDynamicSelect(String sql, Object[] sqlParams) throws VilcodeDaoException;

	/** 
	 * Returns all rows from the vilcode table that match the specified arbitrary SQL statement
	 */
	public Vilcode[] findByDynamicWhere(String sql, Object[] sqlParams) throws VilcodeDaoException;

}
