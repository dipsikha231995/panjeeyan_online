/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package org.nic.epanjeeyan.dao;

import org.nic.epanjeeyan.dto.*;
import org.nic.epanjeeyan.exceptions.*;

public interface SroOfficesDao
{
	/** 
	 * Inserts a new row in the sro_offices table.
	 */
	public SroOfficesPk insert(SroOffices dto) throws SroOfficesDaoException;

	/** 
	 * Updates a single row in the sro_offices table.
	 */
	public void update(SroOfficesPk pk, SroOffices dto) throws SroOfficesDaoException;

	/** 
	 * Deletes a single row in the sro_offices table.
	 */
	public void delete(SroOfficesPk pk) throws SroOfficesDaoException;

	/** 
	 * Returns the rows from the sro_offices table that matches the specified primary-key value.
	 */
	public SroOffices findByPrimaryKey(SroOfficesPk pk) throws SroOfficesDaoException;

	/** 
	 * Returns all rows from the sro_offices table that match the criteria 'id = :id'.
	 */
	public SroOffices findByPrimaryKey(int id) throws SroOfficesDaoException;

	/** 
	 * Returns all rows from the sro_offices table that match the criteria 'dbusers_id = :dbusersId'.
	 */
	public SroOffices[] findWhereDbusersIdEquals(int dbusersId) throws SroOfficesDaoException;

	/** 
	 * Returns all rows from the sro_offices table that match the criteria ''.
	 */
	public SroOffices[] findAll() throws SroOfficesDaoException;

	/** 
	 * Returns all rows from the sro_offices table that match the criteria 'id = :id'.
	 */
	public SroOffices[] findWhereIdEquals(int id) throws SroOfficesDaoException;

	/** 
	 * Returns all rows from the sro_offices table that match the criteria 'office_name = :officeName'.
	 */
	public SroOffices[] findWhereOfficeNameEquals(String officeName) throws SroOfficesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sro_offices table that match the specified arbitrary SQL statement
	 */
	public SroOffices[] findByDynamicSelect(String sql, Object[] sqlParams) throws SroOfficesDaoException;

	/** 
	 * Returns all rows from the sro_offices table that match the specified arbitrary SQL statement
	 */
	public SroOffices[] findByDynamicWhere(String sql, Object[] sqlParams) throws SroOfficesDaoException;

}
