/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package org.nic.epanjeeyan.dao;

import org.nic.epanjeeyan.dto.*;
import org.nic.epanjeeyan.exceptions.*;

public interface LandvalueDao
{
	/** 
	 * Inserts a new row in the landvalue table.
	 */
	public LandvaluePk insert(Landvalue dto) throws LandvalueDaoException;

	/** 
	 * Updates a single row in the landvalue table.
	 */
	public void update(LandvaluePk pk, Landvalue dto) throws LandvalueDaoException;

	/** 
	 * Deletes a single row in the landvalue table.
	 */
	public void delete(LandvaluePk pk) throws LandvalueDaoException;

	/** 
	 * Returns the rows from the landvalue table that matches the specified primary-key value.
	 */
	public Landvalue findByPrimaryKey(LandvaluePk pk) throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the criteria 'vlcode = :vlcode AND landtype = :landtype AND amount = :amount'.
	 */
	public Landvalue findByPrimaryKey(String vlcode, String landtype, String amount) throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the criteria ''.
	 */
	public Landvalue[] findAll() throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the criteria 'vlcode = :vlcode'.
	 */
	public Landvalue[] findWhereVlcodeEquals(String vlcode) throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the criteria 'vlname = :vlname'.
	 */
	public Landvalue[] findWhereVlnameEquals(String vlname) throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the criteria 'landtype = :landtype'.
	 */
	public Landvalue[] findWhereLandtypeEquals(String landtype) throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the criteria 'amount = :amount'.
	 */
	public Landvalue[] findWhereAmountEquals(String amount) throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the criteria 'ovmtype = :ovmtype'.
	 */
	public Landvalue[] findWhereOvmtypeEquals(String ovmtype) throws LandvalueDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the landvalue table that match the specified arbitrary SQL statement
	 */
	public Landvalue[] findByDynamicSelect(String sql, Object[] sqlParams) throws LandvalueDaoException;

	/** 
	 * Returns all rows from the landvalue table that match the specified arbitrary SQL statement
	 */
	public Landvalue[] findByDynamicWhere(String sql, Object[] sqlParams) throws LandvalueDaoException;

}
