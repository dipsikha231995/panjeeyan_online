/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package org.nic.epanjeeyan.dao;

import org.nic.epanjeeyan.dto.*;
import org.nic.epanjeeyan.exceptions.*;

public interface ImplementSroDao
{
	/** 
	 * Inserts a new row in the implement_sro table.
	 */
	public void insert(ImplementSro dto) throws ImplementSroDaoException;

	/** 
	 * Returns all rows from the implement_sro table that match the criteria ''.
	 */
	public ImplementSro[] findAll() throws ImplementSroDaoException;

	/** 
	 * Returns all rows from the implement_sro table that match the criteria 'sro_code = :sroCode'.
	 */
	public ImplementSro[] findWhereSroCodeEquals(String sroCode) throws ImplementSroDaoException;

	/** 
	 * Returns all rows from the implement_sro table that match the criteria 'district_code = :districtCode'.
	 */
	public ImplementSro[] findWhereDistrictCodeEquals(String districtCode) throws ImplementSroDaoException;

	/** 
	 * Returns all rows from the implement_sro table that match the criteria 'sro_name = :sroName'.
	 */
	public ImplementSro[] findWhereSroNameEquals(String sroName) throws ImplementSroDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the implement_sro table that match the specified arbitrary SQL statement
	 */
	public ImplementSro[] findByDynamicSelect(String sql, Object[] sqlParams) throws ImplementSroDaoException;

	/** 
	 * Returns all rows from the implement_sro table that match the specified arbitrary SQL statement
	 */
	public ImplementSro[] findByDynamicWhere(String sql, Object[] sqlParams) throws ImplementSroDaoException;

}
