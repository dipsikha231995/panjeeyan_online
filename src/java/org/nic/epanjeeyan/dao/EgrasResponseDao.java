/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package org.nic.epanjeeyan.dao;

import org.nic.epanjeeyan.dto.*;
import org.nic.epanjeeyan.exceptions.*;

public interface EgrasResponseDao
{
	/** 
	 * Inserts a new row in the egras_response table.
	 */
	public EgrasResponsePk insert(EgrasResponse dto) throws EgrasResponseDaoException;

	/** 
	 * Updates a single row in the egras_response table.
	 */
	public void update(EgrasResponsePk pk, EgrasResponse dto) throws EgrasResponseDaoException;

	/** 
	 * Deletes a single row in the egras_response table.
	 */
	public void delete(EgrasResponsePk pk) throws EgrasResponseDaoException;

	/** 
	 * Returns the rows from the egras_response table that matches the specified primary-key value.
	 */
	public EgrasResponse findByPrimaryKey(EgrasResponsePk pk) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'id = :id'.
	 */
	public EgrasResponse findByPrimaryKey(int id) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria ''.
	 */
	public EgrasResponse[] findAll() throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'id = :id'.
	 */
	public EgrasResponse[] findWhereIdEquals(int id) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'departmentId = :departmentId'.
	 */
	public EgrasResponse[] findWhereDepartmentIdEquals(String departmentId) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'officeCode = :officeCode'.
	 */
	public EgrasResponse[] findWhereOfficeCodeEquals(String officeCode) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'grnNo = :grnNo'.
	 */
	public EgrasResponse[] findWhereGrnNoEquals(String grnNo) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'requestParameters = :requestParameters'.
	 */
	public EgrasResponse[] findWhereRequestParametersEquals(String requestParameters) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'responseParameters = :responseParameters'.
	 */
	public EgrasResponse[] findWhereResponseParametersEquals(String responseParameters) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'mobileNo = :mobileNo'.
	 */
	public EgrasResponse[] findWhereMobileNoEquals(int mobileNo) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'amount = :amount'.
	 */
	public EgrasResponse[] findWhereAmountEquals(int amount) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'cin = :cin'.
	 */
	public EgrasResponse[] findWhereCinEquals(String cin) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the criteria 'year = :year'.
	 */
	public EgrasResponse[] findWhereYearEquals(int year) throws EgrasResponseDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the egras_response table that match the specified arbitrary SQL statement
	 */
	public EgrasResponse[] findByDynamicSelect(String sql, Object[] sqlParams) throws EgrasResponseDaoException;

	/** 
	 * Returns all rows from the egras_response table that match the specified arbitrary SQL statement
	 */
	public EgrasResponse[] findByDynamicWhere(String sql, Object[] sqlParams) throws EgrasResponseDaoException;

}
