/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package org.nic.epanjeeyan.dao;

import java.util.Date;
import org.nic.epanjeeyan.dto.*;
import org.nic.epanjeeyan.exceptions.*;

public interface LeavePlanDao
{
	/** 
	 * Inserts a new row in the leave_plan table.
	 */
	public LeavePlanPk insert(LeavePlan dto) throws LeavePlanDaoException;

	/** 
	 * Updates a single row in the leave_plan table.
	 */
	public void update(LeavePlanPk pk, LeavePlan dto) throws LeavePlanDaoException;

	/** 
	 * Deletes a single row in the leave_plan table.
	 */
	public void delete(LeavePlanPk pk) throws LeavePlanDaoException;

	/** 
	 * Returns the rows from the leave_plan table that matches the specified primary-key value.
	 */
	public LeavePlan findByPrimaryKey(LeavePlanPk pk) throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the criteria 'slno = :slno'.
	 */
	public LeavePlan findByPrimaryKey(int slno) throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the criteria ''.
	 */
	public LeavePlan[] findAll() throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the criteria 'slno = :slno'.
	 */
	public LeavePlan[] findWhereSlnoEquals(int slno) throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the criteria 'office_id = :officeId'.
	 */
	public LeavePlan[] findWhereOfficeIdEquals(int officeId) throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the criteria 'officer_id = :officerId'.
	 */
	public LeavePlan[] findWhereOfficerIdEquals(int officerId) throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the criteria 'from_date = :fromDate'.
	 */
	public LeavePlan[] findWhereFromDateEquals(Date fromDate) throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the criteria 'to_date = :toDate'.
	 */
	public LeavePlan[] findWhereToDateEquals(Date toDate) throws LeavePlanDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the leave_plan table that match the specified arbitrary SQL statement
	 */
	public LeavePlan[] findByDynamicSelect(String sql, Object[] sqlParams) throws LeavePlanDaoException;

	/** 
	 * Returns all rows from the leave_plan table that match the specified arbitrary SQL statement
	 */
	public LeavePlan[] findByDynamicWhere(String sql, Object[] sqlParams) throws LeavePlanDaoException;

}
